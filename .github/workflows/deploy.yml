stages:
  - build
  - deploy

variables:
  AWS_DEFAULT_REGION: eu-north-1
  CLUSTER_NAME: demo-cluster
  ECR_REPOSITORY: 992382840772.dkr.ecr.eu-north-1.amazonaws.com 
  IMAGE_TAG: latest
  NGINX_IMAGE: nginx:latest  # Use the official NGINX Docker image



# Build and push Docker image to ECR
build_and_push:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker --version
    - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
    - docker pull $NGINX_IMAGE
    - docker tag $NGINX_IMAGE $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG
    - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG

# Deploy to EKS using kubectl
deploy_to_eks:
  stage: deploy
  image: lachlanevenson/k8s-kubectl:latest
  script:
    - echo "Setting up kubeconfig"
    - aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name $CLUSTER_NAME
    - kubectl get nodes
    - kubectl apply -f k8s/deployment.yaml
    - kubectl apply -f k8s/service.yaml
    - kubectl apply -f k8s/ingress.yaml
    - kubectl get pods
